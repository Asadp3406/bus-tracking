version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: smartbus_postgres
    environment:
      POSTGRES_DB: smartbus_tracker
      POSTGRES_USER: smartbus_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-smartbus2024}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - smartbus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smartbus_admin -d smartbus_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartbus_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - smartbus_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for Historical Data
  mongodb:
    image: mongo:6-jammy
    container_name: smartbus_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: smartbus_admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-mongo2024}
      MONGO_INITDB_DATABASE: smartbus_history
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - smartbus_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # MQTT Broker (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: smartbus_mqtt
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - smartbus_network
    restart: unless-stopped

  # Node.js Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: smartbus_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://smartbus_admin:${POSTGRES_PASSWORD:-smartbus2024}@postgres:5432/smartbus_tracker
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis2024}@redis:6379
      MONGODB_URI: mongodb://smartbus_admin:${MONGO_PASSWORD:-mongo2024}@mongodb:27017/smartbus_history?authSource=admin
      MQTT_BROKER_URL: mqtt://mosquitto:1883
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key-2024}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
    volumes:
      - ../backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - smartbus_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      mosquitto:
        condition: service_started
    restart: unless-stopped
    command: npm start

  # React Admin Dashboard
  admin-dashboard:
    build:
      context: ../admin-dashboard
      dockerfile: Dockerfile
    container_name: smartbus_admin
    environment:
      VITE_API_URL: ${API_URL:-http://localhost:3000/api}
      VITE_SOCKET_URL: ${SOCKET_URL:-ws://localhost:3000}
      VITE_MAPBOX_TOKEN: ${MAPBOX_TOKEN}
    volumes:
      - ../admin-dashboard:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - smartbus_network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: smartbus_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - smartbus_network
    depends_on:
      - backend
      - admin-dashboard
    restart: unless-stopped

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: smartbus_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@smartbus.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin2024}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - smartbus_network
    depends_on:
      - postgres
    restart: unless-stopped

  # Portainer for Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: smartbus_portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
      - "9443:9443"
    networks:
      - smartbus_network
    restart: unless-stopped

networks:
  smartbus_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  mongo_data:
  mongo_config:
  pgadmin_data:
  portainer_data:
